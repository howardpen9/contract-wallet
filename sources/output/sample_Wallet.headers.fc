#pragma version =0.4.3;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

;;
;; Header files for Wallet
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; $TransferMessage$_load
(slice, ((slice, slice))) $TransferMessage$_load(slice sc_0) inline;

;; $Wallet$_store
builder $Wallet$_store(builder build_0, (int, int, int) v) inline;

;; $Wallet$_load
(slice, ((int, int, int))) $Wallet$_load(slice sc_0) inline;

;; $Wallet$init$_load
(slice, ((int, int))) $Wallet$init$_load(slice sc_0) inline;

;; $Wallet$_contract_init
(int, int, int) $Wallet$_contract_init(int $publicKey, int $walletId) impure inline_ref;

;; $Wallet$_contract_load
(int, int, int) $Wallet$_contract_load() impure inline_ref;

;; $Wallet$_contract_store
() $Wallet$_contract_store((int, int, int) v) impure inline;

;; $Wallet$_fun_processTransfer
((int, int, int), ()) $Wallet$_fun_processTransfer((int, int, int) $self, (slice, slice) $msg, int $external) impure inline_ref;

;; $Wallet$_fun_seqno
((int, int, int), int) $Wallet$_fun_seqno((int, int, int) $self) impure inline_ref;
